{"version":3,"sources":["components/IconButtonx/index.jsx","scenes/Planner/scenes/Selection/components/AddCourse/components/AddButton/index.jsx","scenes/Planner/scenes/Selection/components/RemoveCourse/components/RemoveButton/index.jsx","components/CourseLabel/index.jsx","scenes/Planner/scenes/Selection/components/AddCourse/index.jsx","scenes/Planner/scenes/Selection/components/RemoveCourse/index.jsx","scenes/Planner/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["IconButtonx","_ref","children","rest","Object","objectWithoutProperties","react_default","a","createElement","IconButton","assign","className","focusable","viewBox","aria-hidden","role","AddButton","onClickAdd","components_IconButtonx","onClick","d","fill","propType","PropType","func","isRequired","RemoveButton","onClickRemove","CourseLabel","subject","course","concat","string","AddCourse","components_CourseLabel","components_AddButton","RemoveCourse","components_RemoveButton","Planner","components_AddCourse","components_RemoveCourse","Component","App","scenes_Planner","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01f7f9f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.scss';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst IconButtonx = ({ children, ...rest }) => (\r\n    <IconButton\r\n        className=\"icon-button\"\r\n        {...rest}\r\n    >\r\n        <svg className=\"svg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\">\r\n            {children}\r\n        </svg>\r\n    </IconButton>\r\n);\r\n\r\nexport default IconButtonx;\r\n\r\n/*\r\n\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\r\n            </svg>\r\n\r\n\r\nconst IconButtonxx = ({ children, ...rest }) => (\r\n    <IconButton\r\n        className={classes.button}\r\n        {...rest}\r\n    >\r\n        {children}\r\n    </IconButton>\r\n);\r\n        <IconButton className={classes.button} aria-label=\"delete\">\r\n            <DeleteIcon />\r\n        </IconButton>\r\n        <IconButton className={classes.button} aria-label=\"delete\" disabled color=\"primary\">\r\n            <DeleteIcon />\r\n        </IconButton>\r\n        <IconButton color=\"secondary\" className={classes.button} aria-label=\"add an alarm\">\r\n            <Icon>alarm</Icon>\r\n        </IconButton>\r\n        <IconButton color=\"primary\" className={classes.button} aria-label=\"add to shopping cart\">\r\n            <AddShoppingCartIcon />\r\n        </IconButton>\r\n        <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n        <label htmlFor=\"icon-button-file\">\r\n            <IconButton\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n            >\r\n                <PhotoCamera />\r\n            </IconButton>\r\n        </label>\r\n    </div>\r\n);\r\n}\r\n*/","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport IconButtonx from '../../../../../../../../components/IconButtonx';\r\n\r\nconst AddButton = ({ onClickAdd }) => (\r\n    <IconButtonx\r\n        onClick={onClickAdd}\r\n    >\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\" />\r\n    </IconButtonx>\r\n);\r\n\r\nAddButton.propType = {\r\n    onClickAdd: PropType.func.isRequired,\r\n};\r\n\r\nexport default AddButton;","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport IconButtonx from '../../../../../../../../components/IconButtonx';\r\n\r\nconst RemoveButton = ({ onClickRemove }) => (\r\n    <IconButtonx\r\n        onClick={onClickRemove}\r\n    >\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\" />\r\n    </IconButtonx>\r\n);\r\n\r\nRemoveButton.propType = {\r\n    onClickRemove: PropType.func.isRequired,\r\n};\r\n\r\nexport default RemoveButton;","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport './styles.scss';\r\n\r\nconst CourseLabel = ({ subject, course }) => (\r\n    <p className=\"label\">\r\n        {subject.concat(\" \", course)}\r\n    </p>\r\n);\r\n\r\nCourseLabel.propType = {\r\n    subject: PropType.string.isRequired,\r\n    course: PropType.string.isRequired,\r\n};\r\n\r\nexport default CourseLabel;","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport AddButton from './components/AddButton';\r\nimport CourseLabel from '../../../../../../components/CourseLabel';\r\n\r\nconst AddCourse = ({ subject, course, onClickAdd }) => (\r\n    <div>\r\n        <CourseLabel \r\n            subject={subject}\r\n            course={course}    \r\n        />\r\n        <AddButton \r\n            onClickAdd={onClickAdd}\r\n        />\r\n    </div>\r\n);\r\n\r\nAddCourse.propType = {\r\n    subject: PropType.string.isRequired,\r\n    course: PropType.string.isRequired,\r\n    onClickAdd: PropType.func.isRequired,\r\n};\r\n\r\nexport default AddCourse;","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport RemoveButton from './components/RemoveButton';\r\nimport CourseLabel from '../../../../../../components/CourseLabel';\r\n\r\nconst RemoveCourse = ({ subject, course, onClickRemove }) => (\r\n    <div>\r\n        <CourseLabel \r\n            subject={subject}\r\n            course={course}    \r\n        />\r\n        <RemoveButton \r\n            onClickRemove={onClickRemove}\r\n        />\r\n    </div>\r\n);\r\n\r\nRemoveCourse.propType = {\r\n    subject: PropType.string.isRequired,\r\n    course: PropType.string.isRequired,\r\n    onClickRemove: PropType.func.isRequired,\r\n};\r\n\r\nexport default RemoveCourse;","import React, { Component } from 'react';\r\nimport styles from './styles.scss'\r\n//import AddButton from '../../components/AddButton';\r\n//import RemoveButton from '../../components/RemoveButton';\r\nimport AddButton from './scenes/Selection/components/AddCourse/components/AddButton';\r\nimport RemoveButton from './scenes/Selection/components/RemoveCourse/components/RemoveButton';\r\n\r\nimport AddCourse from './scenes/Selection/components/AddCourse';\r\nimport RemoveCourse from './scenes/Selection/components/RemoveCourse';\r\n\r\nclass Planner extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AddButton />\r\n                <RemoveButton />\r\n                <AddCourse subject=\"CS\" course=\"135\" />\r\n                <RemoveCourse subject=\"MATH\" course=\"239\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Planner;","import React, { Component } from 'react';\r\nimport Planner from './scenes/Planner';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Planner />\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'babel-polyfill'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}