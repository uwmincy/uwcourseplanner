{"version":3,"sources":["components/IconButtonx/index.jsx","scenes/Planner/scenes/Selection/components/AddCourse/components/AddButton/index.jsx","scenes/Planner/scenes/Selection/components/RemoveCourse/components/RemoveButton/index.jsx","components/Textbox/index.jsx","components/CourseLabel/index.jsx","scenes/Planner/scenes/Selection/components/AddCourse/index.jsx","scenes/Planner/scenes/Selection/components/RemoveCourse/index.jsx","scenes/Planner/scenes/Selection/index.jsx","components/Schedule/index.jsx","scenes/Planner/scenes/View/index.jsx","scenes/Planner/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["IconButtonx","_ref","children","rest","Object","objectWithoutProperties","react_default","a","createElement","IconButton","assign","className","AddButton","onClickAdd","components_IconButtonx","onClick","focusable","viewBox","aria-hidden","role","d","fill","propType","PropType","func","isRequired","RemoveButton","onClickRemove","index","id","Textbox","label","value","onChangeText","type","onChange","string","CourseLabel","subject","course","concat","AddCourse","onChangeSubject","onChangeCourse","components_Textbox","components_AddButton","RemoveCourse","components_CourseLabel","components_RemoveButton","Selection","courseCart","courseQueue","map","cartItem","components_RemoveCourse","components_AddCourse","localizer","momentLocalizer","moment","Schedule","events","react_big_calendar_esm","startAccessor","endAccessor","defaultDate","toDate","View","components_Schedule","Planner","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","now","Date","title","allDay","start","end","state","handleClickRemove","bind","assertThisInitialized","handleChangeSubject","handleChangeCourse","handleClickAdd","courseCartCopy","slice","splice","setState","console","log","push","_this2","scenes_Selection","event","target","scenes_View","Component","App","scenes_Planner","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a1f563d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.scss';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst IconButtonx = ({ children, ...rest }) => (\r\n    <IconButton\r\n        className=\"icon-button\"\r\n        {...rest}\r\n    >\r\n        {children}\r\n    </IconButton>\r\n);\r\n\r\nexport default IconButtonx;\r\n\r\n/*\r\n\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\r\n            </svg>\r\n\r\n\r\nconst IconButtonxx = ({ children, ...rest }) => (\r\n    <IconButton\r\n        className={classes.button}\r\n        {...rest}\r\n    >\r\n        {children}\r\n    </IconButton>\r\n);\r\n        <IconButton className={classes.button} aria-label=\"delete\">\r\n            <DeleteIcon />\r\n        </IconButton>\r\n        <IconButton className={classes.button} aria-label=\"delete\" disabled color=\"primary\">\r\n            <DeleteIcon />\r\n        </IconButton>\r\n        <IconButton color=\"secondary\" className={classes.button} aria-label=\"add an alarm\">\r\n            <Icon>alarm</Icon>\r\n        </IconButton>\r\n        <IconButton color=\"primary\" className={classes.button} aria-label=\"add to shopping cart\">\r\n            <AddShoppingCartIcon />\r\n        </IconButton>\r\n        <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n        <label htmlFor=\"icon-button-file\">\r\n            <IconButton\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n            >\r\n                <PhotoCamera />\r\n            </IconButton>\r\n        </label>\r\n    </div>\r\n);\r\n}\r\n*/","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport IconButtonx from '../../../../../../../../components/IconButtonx';\r\n\r\nconst AddButton = ({ onClickAdd }) => (\r\n    <IconButtonx\r\n        onClick={onClickAdd}\r\n    >\r\n        <svg className=\"svg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n            <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\" />\r\n        </svg>\r\n    </IconButtonx>\r\n);\r\n\r\nAddButton.propType = {\r\n    onClickAdd: PropType.func.isRequired,\r\n};\r\n\r\nexport default AddButton;","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport IconButtonx from '../../../../../../../../components/IconButtonx';\r\n\r\nconst RemoveButton = ({ onClickRemove, index }) => (\r\n    <IconButtonx\r\n        onClick={onClickRemove}\r\n        id={index}\r\n    >\r\n        <svg id={index} className=\"svg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n            <path id={index} d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\" />\r\n        </svg>\r\n    </IconButtonx>\r\n);\r\n\r\nRemoveButton.propType = {\r\n    onClickRemove: PropType.func.isRequired,\r\n};\r\n\r\nexport default RemoveButton;","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport './styles.scss'\r\n\r\nconst Textbox = ({ label, value, onChangeText }) => (\r\n    <p className=\"textbox\">\r\n        <label>{label}</label>\r\n        <input \r\n            type = \"text\"\r\n            value = {value}\r\n            onChange = {onChangeText}\r\n        />\r\n    </p>\r\n)\r\n\r\nTextbox.propType = {\r\n    label: PropType.string,\r\n    value: PropType.string,\r\n    onChangeText: PropType.func,\r\n};\r\n\r\nexport default Textbox;","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport './styles.scss';\r\n\r\nconst CourseLabel = ({ subject, course }) => (\r\n    <p className=\"label\">\r\n        {subject.concat(\" \", course)}\r\n    </p>\r\n);\r\n\r\nCourseLabel.propType = {\r\n    subject: PropType.string.isRequired,\r\n    course: PropType.string.isRequired,\r\n};\r\n\r\nexport default CourseLabel;","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport AddButton from './components/AddButton';\r\nimport Textbox from '../../../../../../components/Textbox';\r\nimport CourseLabel from '../../../../../../components/CourseLabel';\r\n\r\nconst AddCourse = ({ subject, course, onChangeSubject, onChangeCourse, onClickAdd }) => (\r\n    <div>\r\n        <Textbox\r\n            label=\"Subject: \"\r\n            value={subject}\r\n            onChangeText={onChangeSubject}\r\n        />\r\n        <Textbox\r\n            label=\"Course: \"\r\n            value={course}\r\n            onChangeText={onChangeCourse}\r\n        />\r\n        <AddButton \r\n            onClickAdd={onClickAdd}\r\n        />\r\n    </div>\r\n);\r\n\r\nAddCourse.propType = {\r\n    subject: PropType.string.isRequired,\r\n    course: PropType.string.isRequired,\r\n    onChangeSubject: PropType.func.isRequired,\r\n    onChangeCourse: PropType.func.isRequired,\r\n    onClickAdd: PropType.func.isRequired,\r\n};\r\n\r\nexport default AddCourse;","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport RemoveButton from './components/RemoveButton';\r\nimport CourseLabel from '../../../../../../components/CourseLabel';\r\n\r\nconst RemoveCourse = ({ subject, course, onClickRemove, index }) => (\r\n    <div>\r\n        <CourseLabel \r\n            subject={subject}\r\n            course={course}    \r\n        />\r\n        <RemoveButton \r\n            onClickRemove={onClickRemove}\r\n            index={index}\r\n        />\r\n    </div>\r\n);\r\n\r\nRemoveCourse.propType = {\r\n    subject: PropType.string.isRequired,\r\n    course: PropType.string.isRequired,\r\n    onClickRemove: PropType.func.isRequired,\r\n};\r\n\r\nexport default RemoveCourse;","import React from 'react';\r\nimport './styles.scss';\r\nimport AddCourse from './components/AddCourse';\r\nimport RemoveCourse from './components/RemoveCourse';\r\n\r\nconst Selection = ({ courseCart, courseQueue, onClickRemove, onChangeSubject, onChangeCourse, onClickAdd }) => (\r\n    <div className=\"selection\">\r\n        {courseCart.map (\r\n            (cartItem, index) => {\r\n                return (\r\n                    <RemoveCourse\r\n                        subject={cartItem.subject}\r\n                        course={cartItem.course}\r\n                        onClickRemove={onClickRemove}\r\n                        index={index}\r\n                    />\r\n                );\r\n            }\r\n        )}\r\n        <AddCourse\r\n            subject={courseQueue.subject}\r\n            course={courseQueue.course}\r\n            onChangeSubject={onChangeSubject}\r\n            onChangeCourse={onChangeCourse}\r\n            onClickAdd={onClickAdd}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default Selection;","import React from 'react';\r\nimport './styles.scss';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst Schedule = ({ events }) => (\r\n    <div className=\"schedule\">\r\n        <Calendar\r\n            events={events}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            defaultDate={moment().toDate()}\r\n            localizer={localizer}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default Schedule;","import React from 'react';\r\nimport './styles.scss';\r\nimport Schedule from '../../../../components/Schedule';\r\n\r\nconst View = ({ events, courseCart, courseQueue, onClickRemove, onChangeSubject, onChangeCourse, onClickAdd }) => (\r\n    <div className=\"view\">\r\n        <Schedule events={events} />\r\n    </div>\r\n)\r\n\r\nexport default View;","import React, { Component } from 'react';\r\nimport styles from './styles.scss'\r\n//import AddButton from '../../components/AddButton';\r\n//import RemoveButton from '../../components/RemoveButton';\r\nimport AddButton from './scenes/Selection/components/AddCourse/components/AddButton';\r\nimport RemoveButton from './scenes/Selection/components/RemoveCourse/components/RemoveButton';\r\n\r\nimport AddCourse from './scenes/Selection/components/AddCourse';\r\nimport RemoveCourse from './scenes/Selection/components/RemoveCourse';\r\n\r\nimport Selection from './scenes/Selection';\r\nimport View from './scenes/View';\r\n\r\nimport Schedule from '../../components/Schedule'\r\n\r\nclass Planner extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const now = new Date();\r\n        const events = [\r\n          {\r\n              id: 0,\r\n              title: 'All Day Event very long title',\r\n              allDay: true,\r\n              start: new Date(2019, 6, 0),\r\n              end: new Date(2019, 6, 1),\r\n          },\r\n          {\r\n              id: 1,\r\n              title: 'Long Event',\r\n              start: new Date(2019, 3, 7),\r\n              end: new Date(2019, 3, 10),\r\n          },\r\n          {\r\n              id: 2,\r\n              title: 'Right now Time Event',\r\n              start: now,\r\n              end: now,\r\n          },\r\n        ]\r\n        this.state = {\r\n            courseCart: [\r\n                {\r\n                    subject: \"SPCOM\",\r\n                    course: \"225\"\r\n                },\r\n                {\r\n                    subject: \"SPCOM\",\r\n                    course: \"226\"\r\n                },\r\n                {\r\n                    subject: \"SPCOM\",\r\n                    course: \"227\"\r\n                }\r\n            ],\r\n            courseQueue: {\r\n                subject: \"\",\r\n                course: \"\"\r\n            },\r\n            events: events\r\n        };\r\n        this.handleClickRemove = this.handleClickRemove.bind(this);\r\n        this.handleChangeSubject = this.handleChangeSubject.bind(this);\r\n        this.handleChangeCourse = this.handleChangeCourse.bind(this);\r\n        this.handleClickAdd = this.handleClickAdd.bind(this);\r\n    }\r\n\r\n    handleClickRemove(index) {\r\n        if (index !== \"\") {\r\n            const courseCartCopy = this.state.courseCart.slice();\r\n            courseCartCopy.splice(index, 1);\r\n            this.setState({ courseCart: courseCartCopy });\r\n        }\r\n        console.log(index);\r\n    }\r\n\r\n    handleChangeSubject(subject) {\r\n        this.setState({\r\n            courseQueue: {\r\n                subject: subject,\r\n                course: this.state.courseQueue.course\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChangeCourse(course) {\r\n        this.setState({\r\n            courseQueue: {\r\n                subject: this.state.courseQueue.subject,\r\n                course: course\r\n            }\r\n        });\r\n    }\r\n\r\n    handleClickAdd() {\r\n        if (this.state.courseQueue.subject !== \"\" && this.state.courseQueue.course !== \"\") {\r\n            const courseCartCopy = this.state.courseCart.slice();\r\n            courseCartCopy.push(this.state.courseQueue);\r\n            this.setState({\r\n                courseCart: courseCartCopy,\r\n                courseQueue: {\r\n                    subject: \"\",\r\n                    course: \"\"\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Selection \r\n                    courseCart={this.state.courseCart} \r\n                    courseQueue={this.state.courseQueue}\r\n                    onClickRemove={(event) => this.handleClickRemove(event.target.id)} \r\n                    onChangeSubject={(event) => this.handleChangeSubject(event.target.value)} \r\n                    onChangeCourse={(event) => this.handleChangeCourse(event.target.value)} \r\n                    onClickAdd={this.handleClickAdd} \r\n                />\r\n                {console.log(this.state.courseCart)}\r\n                {console.log(this.state.courseQueue)}\r\n\r\n                <View events={this.state.events} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Planner;","import React, { Component } from 'react';\r\nimport Planner from './scenes/Planner';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Planner />\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}